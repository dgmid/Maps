//done(@duncanmid): output map code

function generateMapCode() {
	
	textview = CodaPlugInsController.makeUntitledDocument();
	
	//note(@duncanmid): api key / lang
	var
	api 				= $('#api-key').val(),
	lang 				= $('#lang').val(),
	
	//note(@duncanmid): width / height
	width 				= $('#width').val(),
	height 				= $('#height').val(),
	widthUnits 			= $('#width-units').val(),
	heightUnits 		= $('#height-units').val(),
	
	//note(@duncanmid): map center
	mapLat				= $('#map-lat').val(),
	mapLng				= $('#map-lng').val(),
	
	//note(@duncanmid): map options
	mapType 			= $('#map-type').val(),
	mapTypeStyle 		= $('#map-type-menu').val(),
	mapTypePosition 	= $('#map-type-position').val(),
	zoom				= $('#zoom').val(),
	zoomStyle 			= $('#zoom-type-menu').val(),
	zoomPosition		= $('#zoom-position').val(),
	streetviewPosition	= $('#streetview-position').val(),
	
	//note(@duncanmid): marker
	markerTitle 		= $('#marker-title').val(),
	markerPath 			= $('#marker-shape').val(),
	markerColor 		= $('#marker-color').val(),
	markerOpacity 		= $('#fill-opacity').val(),
	markerLat			= $('#marker-lat').val(),
	markerLng			= $('#marker-lng').val(),
	showStroke 			= $('#show-stroke').val(),
	strokeColor 		= $('#stroke-color').val(),
	strokeWidth 		= $('#stroke-width').val(),
	strokeOpacity 		= $('#stroke-opacity').val(),
	
	//note(@duncanmid): infowindow
	infoWindowContent 	= $('#info-window').val(),
	infoWindowState 	= $('#info-window-state').val(),
	infoWindowWidth 	= $('#info-window-width').val(),
	
	//note(@duncanmid): map styles
	showLand,
	showWater,
	showWaterLabels,
	showAdmin,
	showAdminLabels,
	showPoi,
	showRoad,
	showTrans,
	
	//note(@duncanmid): map colors
	landH 				= colorsArray[$('#land-h').val()],
	landS 				= $('#land-s').val(),
	landL 				= $('#land-l').val(),
	landG				= $('#land-g').val(),
	waterH 				= colorsArray[$('#water-h').val()],
	waterS 				= $('#water-s').val(),
	waterL 				= $('#water-l').val(),
	waterG 				= $('#water-g').val(),	
	adminH 				= colorsArray[$('#admin-h').val()],
	adminS 				= $('#admin-s').val(),
	adminL 				= $('#admin-l').val(),
	adminG 				= $('#admin-g').val(),	
	poiH 				= colorsArray[$('#poi-h').val()],
	poiS 				= $('#poi-s').val(),
	poiL 				= $('#poi-l').val(),
	poiG 				= $('#poi-g').val(),	
	roadH 				= colorsArray[$('#road-h').val()],
	roadS 				= $('#road-s').val(),
	roadL 				= $('#road-l').val(),
	roadG 				= $('#road-g').val(),	
	transH 				= colorsArray[$('#trans-h').val()],
	transS 				= $('#trans-s').val(),
	transL 				= $('#trans-l').val(),
	transG 				= $('#trans-g').val();
	
	
	var mapCode = 	'<!doctype html>\n' +
					'	<html lang="en">\n' +
					'	<head>\n' +
					'		<meta charset="utf-8" />\n' +
					'		<meta name="viewport" content="initial-scale=1.0, user-scalable=no">\n' +
					'		<title>Google Map generated by Maps Coda 2.5 Sidebar Plugin | @duncanmid</title>\n' +
					'		\n' +
					'		<style>\n' +
					'			html, body {\n' +
					'				height: 100%;\n' +
					'				margin: 0;\n' +
					'				padding: 0;\n' +
					'			}\n' +
					'			\n' +
					'			#map-canvas {\n' +
					'				width: ' + width + widthUnits + ';\n' +
					'				height: ' + height + heightUnits + ';\n' +
					'			}\n';
	
	//note(@duncanmid): info window
	if($('#add-info-window').is(':checked') && $('#show-marker').is(':checked')) {
	
		mapCode +=	'			\n' +
					'			.window-content {\n';
	
	if(infoWindowWidth.length > 0) {
		
		mapCode +=	'				width: ' + infoWindowWidth + 'px;\n';
		
	}
					
		mapCode+=	'				line-height: 1;\n' +
					'				overflow: hidden;\n' +
					'				white-space: nowrap;\n' +
					'			}\n';
	}


		mapCode +=	'		</style>\n' +
					'		\n' +
					'		<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&language=' + lang;
	
	if( api.length > 0 ) {
		
		mapCode += '&key=' + api;	
		
	}				
	
		mapCode +=	'"></script>\n' +
					
					'		<script>\n' +
					'			var map;\n' +
					'			function initialize() {\n' +
					'			\n' +
					'				var mapOptions = {\n' +
					'					mapTypeId: google.maps.MapTypeId.' + mapType + ',\n';

	
	//note(@duncanmid): map type options
	if($('#show-map-type').is(':checked')) {

		mapCode +=	'					mapTypeControl: true,\n' +
					'					mapTypeControlOptions: {\n' +
					'						style: google.maps.MapTypeControlStyle.' + mapTypeStyle + ',\n' +
					'						position: google.maps.ControlPosition.' + mapTypePosition + '\n' +
					'					},\n';			
	} else {
		
		mapCode +=	'					mapTypeControl: false,\n';
	}
		
		
		mapCode +=	'					zoom: ' + zoom + ',\n';
	
	
	//note(@duncanmid): zoom options
	if($('#show-zoom').is(':checked')) {
		
		mapCode +=	'					zoomControl: true,\n' +
					'					zoomControlOptions: {\n' +
					'						style: google.maps.ZoomControlStyle.' + zoomStyle + ',\n' +
					'						position: google.maps.ControlPosition.' + zoomPosition + '\n' +
					'					},\n';		
	} else {
	
		mapCode +=	'					zoomControl: false,\n';	
	}
	
	
	//note(@duncanmid): streetview options
	if($('#show-streetview').is(':checked')) {
		
		mapCode +=	'					streetViewControl: true,\n' +
					'					streetViewControlOptions: {\n' +
					'						position: google.maps.ControlPosition.' + streetviewPosition +'\n' +
					'					},\n';		
	} else {
		
		mapCode +=	'					streetViewControl: false,\n';
	}
	
	
	//note(@duncanmid): scale options
	if($('#show-scale').is(':checked')) {
		
		mapCode +=	'					scaleControl: true,\n';
		
	} else {
	
		mapCode +=	'					scaleControl: false,\n';	
	}
	
	
		mapCode +=	'					center: new google.maps.LatLng(' + mapLat + ', ' + mapLng + ')\n' +
					'				};\n' +
					'				\n' +
					'				map = new google.maps.Map(document.getElementById(\'map-canvas\'),\n' +
					'					mapOptions);\n';
	
	//note(@duncanmid): styled maps
	if($('#show-styles').is(':checked')) {
		
		if($('#land').is(':checked')) {
			showLand = 'on';
		} else {
			showLand = 'off';
		}
		
		if($('#water').is(':checked')) {
			showWater = 'on';
		} else {
			showWater = 'off';
		}
		
		if($('#water-labels').is(':checked')) {
			showWaterLabels = 'on';
		} else {
			showWaterLabels = 'off';
		}
		
		if($('#admin').is(':checked')) {
			showAdmin = 'on';
		} else {
			showAdmin = 'off';
		}
		
		if($('#admin-labels').is(':checked')) {
			showAdminLabels = 'on';
		} else {
			showAdminLabels = 'off';
		}
		
		if($('#poi').is(':checked')) {
			showPoi = 'on';
		} else {
			showPoi = 'off';
		}
		
		if($('#road').is(':checked')) {
			showRoad = 'on';
		} else {
			showRoad = 'off';
		}
		
		if($('#trans').is(':checked')) {
			showTrans = 'on';
		} else {
			showTrans = 'off';
		}
		
		mapCode +=	'				\n' +
					'				var mapStyles = [\n' +
					'					{\n' +
					'						"featureType": "landscape",\n' +
					'						"stylers": [\n' +
					'							{ "visibility": "' + showLand + '" }';
	
		
	if($('#land').is(':checked') && $('#land-color').is(':checked')) {
		
		mapCode +=	',\n' +
					'							{ "hue": "' + landH + '" },\n' +
					'							{ "saturation": ' + landS + ' },\n' +
					'							{ "lightness": ' + landL + ' },\n' +
					'							{ "gamma": ' + landG + ' }';
		
	}
	
					
		mapCode +=	'\n' +
					'						]\n' +
					'					},{\n' +
					'						"featureType": "water",\n' +
					'						"stylers": [\n' +
					'							{ "visibility": "' + showWater + '" }';
	
	
	if($('#water').is(':checked') && $('#water-color').is(':checked')) {
		
		mapCode +=	',\n' +
					'							{ "hue": "' + waterH + '" },\n' +
					'							{ "saturation": ' + waterS + ' },\n' +
					'							{ "lightness": ' + waterL + ' },\n' +
					'							{ "gamma": ' + waterG + ' }';
		
	}
	
					
		mapCode +=	'\n' +
					'						]\n' +
					'					},{\n' +
					'						"featureType": "water",\n' +
					'						"elementType": "labels",\n' +
					'						"stylers": [\n' +
					'							{ "visibility": "' + showWaterLabels + '" }\n' +
					'						]\n' +
					'					},{\n' +
					'						"featureType": "administrative",\n' +
					'						"stylers": [\n' +
					'							{ "visibility": "' + showAdmin + '" }';
	
	
	if($('#admin').is(':checked') && $('#admin-color').is(':checked')) {
		
		mapCode +=	',\n' +
					'							{ "hue": "' + adminH + '" },\n' +
					'							{ "saturation": ' + adminS + ' },\n' +
					'							{ "lightness": ' + adminL + ' },\n' +
					'							{ "gamma": ' + adminG + ' }';
		
	}
					
					
		mapCode +=	'\n' +
					'						]\n' +
					'					},{\n' +
					'						"featureType": "administrative",\n' +
					'						"elementType": "labels",\n' +
					'						"stylers": [\n' +
					'							{ "visibility": "' + showAdminLabels + '" }\n' +
					'						]\n' +
					'					},{\n' +
					'						"featureType": "poi",\n' +
					'						"stylers": [\n' +
					'							{ "visibility": "' + showPoi + '" }';
	
	
	if($('#poi').is(':checked') && $('#poi-color').is(':checked')) {
		
		mapCode +=	',\n' +
					'							{ "hue": "' + poiH + '" },\n' +
					'							{ "saturation": ' + poiS + ' },\n' +
					'							{ "lightness": ' + poiL + ' },\n' +
					'							{ "gamma": ' + poiG + ' }';
		
	}
	
					
		mapCode	+=	'\n' +
					'						]\n' +
					'					},{\n' +
					'						"featureType": "road",\n' +
					'						"stylers": [\n' +
					'							{ "visibility": "' + showRoad + '" }';
	
	
	if($('#road').is(':checked') && $('#road-color').is(':checked')) {
		
		mapCode +=	',\n' +
					'							{ "hue": "' + roadH + '" },\n' +
					'							{ "saturation": ' + roadS + ' },\n' +
					'							{ "lightness": ' + roadL + ' },\n' +
					'							{ "gamma": ' + roadG + ' }';
		
	}
	
					
		mapCode	+=	'\n' +
					'						]\n' +
					'					},{\n' +
					'						"featureType": "transit",\n' +
					'						"stylers": [\n' +
					'							{ "visibility": "' + showTrans + '" }';
	
	
	if($('#trans').is(':checked') && $('#trans-color').is(':checked')) {
		
		mapCode +=	',\n' +
					'							{ "hue": "' + transH + '" },\n' +
					'							{ "saturation": ' + transS + ' },\n' +
					'							{ "lightness": ' + transL + ' },\n' +
					'							{ "gamma": ' + transG + ' }';
		
	}
	
					
		mapCode	+=	'\n' +
					'						]\n' +
					'					}\n' +
					'				];\n';
		
		mapCode +=	'				\n' +
					'				map.setOptions({styles: mapStyles});\n';
		
	}
	
	
	//note(@duncanmid): traffic layer
	if($('#traffic').is(':checked')) {
		
		mapCode +=	'				\n' +
					'				var trafficLayer = new google.maps.TrafficLayer();\n' +
					'				trafficLayer.setMap(map);\n';		
	}
	
	
	//note(@duncanmid): transit layer
	if($('#transit').is(':checked')) {
		
		mapCode +=	'				\n' +
					'				var transitLayer = new google.maps.TransitLayer();\n' +
					'				transitLayer.setMap(map);\n';		
	}
	
	
	//note(@duncanmid): bicycling layer
	if($('#bicycling').is(':checked')) {
		
		mapCode +=	'				\n' +
					'				var bicyclingLayer = new google.maps.BicyclingLayer();\n' +
					'				bicyclingLayer.setMap(map);\n';		
	}
	
	
	//note(@duncanmid): info window
	if($('#add-info-window').is(':checked') && $('#show-marker').is(':checked')) {
		
		mapCode += 	'				\n' +
					'				var infoContent = \'<div class="window-content">' + infoWindowContent + '</div>\';\n' +
					'				\n' +
					'				var infowindow = new google.maps.InfoWindow({\n' +
					'					content: infoContent\n' +
					'				});\n';	
		
	}
	
	
	//note(@duncanmid): marker
	if($('#show-marker').is(':checked')) {
		
		var iconPath, iconX, iconY;
	
		switch ($('#marker-shape').val()) {
			
			case 'pin':
				
				iconPath 	= pin;
				iconX 		= pinX;
				iconY 		= pinY;
				break;
				
			case 'star':
				
				iconPath 	= star;
				iconX 		= starX;
				iconY 		= starY;
				break;
				
			case 'circle':
				
				iconPath 	= circle;
				iconX 		= circleX;
				iconY 		= circleY;
				break;
				
			case 'flag':
				
				iconPath 	= flag;
				iconX 		= flagX;
				iconY 		= flagY;
				break;
			
			default:
				
				iconPath 	= shield;
				iconX 		= shieldX;
				iconY 		= shieldY;
		}		
		
		var iconSize;
	
		switch ($('#marker-size').val()) {
			
			case 'small':
				
				iconSize 	= 0.66;
				break;
			
			case 'medium':
				
				iconSize 	= 1;
				break;
			
			default:
			
				iconSize 	= 1.33;	
		}
	
	//note(@duncanmid): marker icon
		mapCode +=	'				\n' +
					'				var icon = {\n' +
					'					path: \'' + iconPath + '\',\n' +
					'					anchor: new google.maps.Point(' + iconX + ', ' + iconY + '),\n' +
					'					fillColor: \'' + markerColor + '\',\n' +
					'					fillOpacity: ' + markerOpacity + ',\n';
		
	//note(@duncanmid): marker stoke
	if($('#show-stroke').is(':checked')) {
					
		mapCode +=	'					strokeWeight: ' + strokeWidth + ',\n' +
					'					strokeColor: \'' + strokeColor + '\',\n' + 
					'					strokeOpacity: ' + strokeOpacity + ',\n';
						
	} else {
	
		mapCode +=	'					strokeWeight: 0,\n';
		
	}
		
		
		mapCode +=	'					scale: ' + iconSize + '\n' +
					'				};\n';
					
		
		mapCode +=	'				\n' +
					'				var marker = new google.maps.Marker({\n' +
					'					position: new google.maps.LatLng(' + markerLat + ', ' + markerLng + '),\n' +
					'					map: map,\n' +
					'					icon: icon,\n' +
					'					title: \'' + markerTitle + '\'\n' +
					'				});\n';
		
	}
	
	//note(@duncanmid): if info window
	if($('#add-info-window').is(':checked') && $('#show-marker').is(':checked')) {
		
		mapCode +=	'				\n' +
					'				google.maps.event.addListener(marker, \'click\', function() {\n' +
					'					infowindow.open(map,marker);\n' +
					'				});\n';
		
		//note(@duncanmid): if infowindow is open	
		if($('#info-window-state').val() === 'true') {	
		
		mapCode +=	'				\n' +
					'				infowindow.open(map, marker);\n';
		}	
	}
	

	
		mapCode +=	'			}\n' +
					'			\n' +
					'			google.maps.event.addDomListener(window, \'load\', initialize);\n' +
					'			\n';
	
	//note(@duncanmid): if map is responsive
	if(	widthUnits 		=== '%'		||
		widthUnits 		=== 'vw'	||
		widthUnits 		=== 'vh'	||
		heightUnits 	=== '%'		||
		heightUnits 	=== 'vw'	||
		heightUnits 	=== 'vh'	) {
		
		
		mapCode +=	'			function checkResize(){\n' +
					'			\n' +
					'				var center = map.getCenter();\n' + 
					'				google.maps.event.trigger(map, \'resize\');\n' + 
					'				map.setCenter(center);\n' + 
					'			}\n' +
					'			\n' +
					'			window.onresize = checkResize;' +
					'			\n';		
	}
					
		mapCode +=	'		</script>\n' +
					'	</head>\n' +
					'	\n' +
					'	<body>\n' +
					'		<div id="map-canvas"></div>\n' +
					'	</body>\n' +
					'</html>\n';
	
	
	//note(@duncanmid): inset map code
	window.CodaTextView.insertText(mapCode);
}
